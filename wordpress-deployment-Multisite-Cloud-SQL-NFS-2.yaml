apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  ports:
    - port: 80
  selector:
    app: wordpress
    tier: frontend
  type: LoadBalancer
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: wp-nfs-share
# spec:
#   capacity:
#     storage: 10Gi # This size is used to match a volume to a tenents claim
#   accessModes:
#     - ReadWriteOnce # Access modes are defined below
#   persistentVolumeReclaimPolicy: Recycle # Reclaim policies are defined below 
#   nfs:
#     server: 10.225.169.146 # Please change this to your NFS server
#     path: /wp_nfs_1 # Please change this to the relevant share
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: wp-nfs
#   namespace: default
#   labels:
#     app: wordpress
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 10Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - name: wordpress
        image: wordpress
        env:
        - name: WORDPRESS_CONFIG_EXTRA
          value: |
            /* Multisite */
            define( 'WP_ALLOW_MULTISITE', true );
        - name: WORDPRESS_DB_HOST
          value: 127.0.0.1:3306
        - name: WORDPRESS_DB_USER
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: username
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudsql-db-credentials
              key: password
        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: nfs-volume
          mountPath: /var/www/html
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.14
        command: ["/cloud_sql_proxy",
                    "-instances=terrafrom-learning:us-central1:k8s-mysql=tcp:3306",
                    # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                    # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                    # "-ip_address_types=PRIVATE",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
        volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-nfs 
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsql-instance-credentials
      - name: nfs-volume
        nfs:
          server: 10.225.169.146 # Please change this to your NFS server
          path: /wp_nfs_1 # Please change this to the relevant share
